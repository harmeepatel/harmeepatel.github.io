package components;

import(
    "fmt"
    "strconv"
)

const underLineHeight = 0.18;
templ NavLi(name string, ref string) {
	<li class={"flex items-center md:list-item md:mt-[" + fmt.Sprintf("%.3f", underLineHeight+0.02) + "rem]"}>
		<a href={templ.URL(ref)} class="font-normal group">
			{ name }
			<span
                class={"block max-w-0 group-hover:max-w-full h-[" + fmt.Sprintf("%.3f", underLineHeight) + "rem] rounded-md bg-accent-p transition-all duration-200"}
			></span>
		</a>
	</li>
}

templ Link(ref string, target string, class string, ariaLable string) {
	<a 
        href={ templ.URL(ref) } 
        target={ target } 
        class={"transition-all duration-75 underline underline-offset-2 md:hover:decoration-wavy md:hover:underline-offset-4 md:hover:decoration-accent-p font-medium italic " + class}
        aria-label={ ariaLable }
    >
		{ children... }
	</a>
}

templ BlogLink(ref string, target string, class string, ariaLable string) {
	<a 
        href={ templ.URL(ref) } 
        target={ target } 
        class={"block transition-all duration-75 underline underline-offset-2 decoration-[12%] md:hover:decoration-wavy md:hover:underline-offset-[6px] md:hover:decoration-accent-p font-black tracking-wide md:tracking-wider leading-snug md:!leading-[1.5] italic text-pretty text-base xs:text-lg md:text-xl xl:text-2xl " + class}
        aria-label={ ariaLable }
    >
		{ children... }
	</a>
}

templ Code(lang string, code string) {
    @templ.Raw(`
        <pre>
            <code class="`+ lang +` !px-5 !pt-4 !pb-0 lg:!px-10 lg:!pt-8 lg:!pb-0 rounded-xl xl:rounded-2xl ring-1 dark:ring-white/80 ring-black shadow-[0_0_20px_-5px_rgba(0,0,0,0.3)] dark:shadow-[0_0_20px_-5px_rgba(0,0,0,1)]">` + 
                code + `
            </code>
        </pre>
    `)
}

// icon
type IconInfo struct {
	Src   string
	Width int
	Class string
	Alt   string
}

templ Icon(icon IconInfo) {
	<img
		class={ "dark:filter dark:invert inline " + icon.Class }
		src={ icon.Src }
		alt={ icon.Alt }
		width={ strconv.Itoa(icon.Width) }
	/>
}
